// 指定插件
plugins {
    // 这里面指定插件与该结构外部使用apply plugin插件作用相同，plugin内部会先执行。
    id 'java'
    // spring boot 插件，此处的插件如果当前项目没有依赖，需要导入依赖才可用
    id 'org.springframework.boot' version('2.4.5')
}

//apply plugin: 'java'
/*
自动依赖管理，Spring相关的所有版本号都由Spring boot的版本号指定
需要导入spring-boot-gradle-plugin以使用
 */
apply plugin: 'io.spring.dependency-management'


// 包名 版本
group 'org.example'
version '1.0-SNAPSHOT'


// 指定java版本
sourceCompatibility = 1.8
targetCompatibility = 1.8

// 变量定义
ext {

}


repositories {
    // 本地仓库 用以缓存
    mavenLocal()
    // 第三方仓库
    maven { url "http://192.168.5.16:8081/repository/maven-public/" }
    maven { url "https://mirrors.huaweicloud.com/repository/maven/" }
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

// 依赖管理
dependencies {
    /**
     * implementation和api是取代之前的compile的，其中api和compile是一样的效果
     * implementation方式依赖的特点是，将依赖的库文件隐藏在内部，不让外部访问，使用implementation指令的依赖不会传递。
     * compileonly和provided效果是一样的，只在编译的时候有效， 不参与打包
     * runtimeOnly 和 apk效果一样，只在打包的时候有效，编译不参与
     * testImplementation和testCompile效果一样，在单元测试和打包测试apk的时候有效
     *
     * annotationProcessor只在编译的时候执行依赖的库，但是库最终不打包到apk中
     * APT(Annotation Processing Tool)是一种处理注释的工具,它对源代码文件进行检测找出其中的Annotation，根据注解自动生成代码。
     *
     */
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.springframework.boot:spring-boot-gradle-plugin:2.4.5'
    implementation 'org.springframework.boot:spring-boot-starter:2.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.4.5'
    // 参数验证
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.5'
    // activiti 框架
    implementation 'org.activiti:activiti-spring-boot-starter-basic:6.0.0'
    // MySQL
    implementation 'mysql:mysql-connector-java:6.0.6'
    // spring boot 配置元数据
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.4.5'
    // swagger3.0
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    compileOnly('org.projectlombok:lombok:1.18.12')
    annotationProcessor('org.projectlombok:lombok:1.18.2')
}

// 配置
//configurations {
//    i.exclude module: "spring-boot-starter-tomcat"
//}